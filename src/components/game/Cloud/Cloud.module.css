.cloudContainer {
  position: absolute;
  pointer-events: auto;
  width: var(--cloud-size);
  height: calc(var(--cloud-size) * 0.6);
}

.cloud {
  position: relative;
  width: 100%;
  height: 100%;
  cursor: pointer;
  user-select: none;
}

.cloud.revealed {
  cursor: default;
  pointer-events: none;
}

.cloudImage {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: var(--z-cloud-image);
  filter: blur(4px) drop-shadow(1px 2px 5px hsl(0, 0%, 15%));
}

/* For CloudB2 */
.overlayCloud {
  position: absolute;
  top: 0;
  left: 0;
  z-index: var(--z-cloud-top);
  width: 100%;
  height: 100%;
  opacity: 0.8;
  overflow: visible;
}

.morphingSVG {
  width: 100%;
  height: 100%;
  width: clamp(220px, 240px, 300px);
}

/* Layer positioning classes */
.topLayer {
  z-index: var(--z-cloud-overlay);
}

.floatingCloud {
  width: 100%;
  height: 100%;
}

.textContent {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: flex;
  text-align: center;
  justify-content: center;
  z-index: var(--z-cloud-top);
  background: transparent;
}

.cloud.zoomed .textContent {
  pointer-events: none;
  cursor: none;
  width: 32ch;
  /* maintain the same transform origin */
  transform: translate(-50%, -50%) !important;
}

/* Show Layer 3 content for revealed clouds */
.cloud.revealed .textContent {
  opacity: 1;
  pointer-events: none;
  cursor: none;
  overflow: hidden;
  width: 30ch;
}


/* Improve mobile performance during zoom */
.cloud.zoomed {
  -webkit-transform-style: preserve-3d;
  transform-style: preserve-3d;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  /* Ensure zoom can control opacity */
  opacity: 1 !important;
  /* Constrain width to max 600px while staying responsive */
  width: min(100%, 600px);
  height: min (300px, 500px);
  /* Elevate above overlay */
  z-index: var(--z-zoom-content);
}

/* Reduce motion for better mobile performance */
@media (prefers-reduced-motion: reduce) {
  .cloud.zoomed {
    transition: none !important;
  }
}

/* iOS specific optimizations to attempt to remove the "jerky" zoom in on my iPhone 13 mini*/
@supports (-webkit-touch-callout: none) {
  .cloud {
    -webkit-transform: translateZ(0);
    transform: translateZ(0);
  }
  
  .cloud.zoomed {
    -webkit-perspective: 1000px;
    perspective: 1000px;
  }
}

.regularLayerText {
  font-size: var(--fs-h6);
  pointer-events: none;
}

.regularLayerText {
  color: var(--clr-blackish);
}

.finalLayerText {
  color: var(--clr-whiteish);
  text-shadow: 0px 1px 2px rgba(0, 0, 0, 0.3);
  transition: font-size 0.1s ease;
  pointer-events: none;
}

.zoomedText {
  font-size: var(--fs-h6);
}

.unzoomedText {
  font-size: var(--fs-p);
}

/* Floating animation for non-revealed, non-zoomed clouds */
.floatingCloud.floating {
  animation: floating 10s linear infinite alternate-reverse none;
  animation-delay: var(--floating-delay, 0s);
  animation-duration: var(--floating-duration, 10s);
}

.floatingCloud.floatingReverse {
  animation: floatingReverse 10s linear infinite alternate-reverse none;
  animation-delay: var(--floating-delay, 0s);
  animation-duration: var(--floating-duration, 12s);
}

@keyframes floating {
  0% {
    transform: translate(0px, 0px) rotate(0deg);
  }
  33% {
    transform: translate(10px, -10px) rotate(1deg);
  }
  66% {
    transform: translate(-5px, 5px) rotate(-1deg);
  }
  100% {
    transform: translate(0px, 0px) rotate(0deg);
  }
}

@keyframes floatingReverse {
  0% {
    transform: translate(0px, 0px) rotate(0deg);
  }
  33% {
    transform: translate(-10px, 10px) rotate(-1deg);
  }
  66% {
    transform: translate(5px, -5px) rotate(1deg);
  }
  100% {
    transform: translate(0px, 0px) rotate(0deg);
  }
}